// Ce fichier contient tous les composants du funnel
// Pour √©conomiser de l'espace, je vais te donner la structure

import React from 'react';
import Script from 'next/script';
import { 
  Phone, DollarSign, Clock, Check, AlertCircle, Shield, 
  Building2, Calculator, ChevronRight, CreditCard, Lock, 
  Star, Award, MessageSquare, Calendar, Video, Users,
  TrendingUp, Zap, Bot, Headphones, BarChart3, Target,
  Sparkles, Trophy, FileText, Send, Eye, Brain,
  CheckCircle, X, Mic, MicOff, Download, ExternalLink,
  Gift, Rocket, Heart, ThumbsUp, Bell
} from 'lucide-react';

// Types
interface StageProps {
  navigateToStage: (stage: string) => void;
  userData: any;
  setUserData: (data: any) => void;
  trackEvent: (event: string, value?: any, data?: any) => void;
  liveStats?: any;
  countdown?: any;
  chatMessages?: any[];
  setChatMessages?: (messages: any[]) => void;
  aiTyping?: boolean;
  setAiTyping?: (typing: boolean) => void;
  sendSMS?: (message: string, to?: string) => Promise<any>;
}

// Landing Stage Component
export const LandingStage: React.FC<StageProps> = ({ 
  navigateToStage, 
  userData, 
  setUserData, 
  trackEvent, 
  liveStats, 
  countdown 
}) => {
  const [showDemo, setShowDemo] = React.useState(false);
  const [quickCalcDone, setQuickCalcDone] = React.useState(false);
  const statsRef = React.useRef(null);

  React.useEffect(() => {
    trackEvent('page_view_landing');
  }, []);

  return (
    <div className="max-w-6xl mx-auto px-4 py-8">
      {/* Hero Section */}
      <section className="mb-12">
        <div className="bg-gradient-to-br from-white to-gray-50 rounded-2xl shadow-2xl p-8 md:p-12 overflow-hidden relative">
          {/* Background pattern */}
          <div className="absolute inset-0 opacity-5">
            <div className="absolute inset-0" style={{
              backgroundImage: `repeating-linear-gradient(45deg, #000 0, #000 1px, transparent 1px, transparent 15px)`,
            }} />
          </div>
          
          {/* Badge d'autorit√© */}
          <div className="text-center mb-8 relative z-10">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-full font-bold text-sm md:text-base animate-pulse">
              <Trophy size={20} />
              <span>PREMIER AU QU√âBEC ‚Ä¢ {CONFIG.SPOTS_TAKEN} CLIENTS ACTIFS</span>
              <Trophy size={20} />
            </div>
          </div>

          {/* Titre principal */}
          <div className="text-center mb-10 relative z-10">
            <h1 className="text-4xl md:text-6xl font-black mb-6 leading-tight">
              Tu Perds{' '}
              <span className="text-red-600 relative">
                <AnimatedMoney value={userData.weeklyLoss} />$/Semaine
                <span className="absolute -bottom-2 left-0 right-0 h-3 bg-red-200 opacity-30 transform skew-x-12"></span>
              </span>
              <br />
              en Appels Manqu√©s
            </h1>
            
            {/* Stat Harvard */}
            <div className="bg-yellow-50 border-2 border-yellow-400 rounded-xl p-4 md:p-6 max-w-3xl mx-auto animate-bounce-slow">
              <p className="text-lg md:text-2xl text-gray-800">
                <span className="font-bold">Harvard Business Review:</span> R√©pondre en 1 minute = 
                <span className="text-green-600 font-black text-2xl md:text-3xl"> 21X</span> plus de chances de convertir
              </p>
              <p className="text-sm md:text-base text-gray-600 mt-2">
                Apr√®s 5 minutes? <span className="text-red-600 font-bold">-400% de conversion</span>
              </p>
            </div>
          </div>

          {/* CTA Principal */}
          <div className="bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-6 md:p-8 text-white mb-8 transform hover:scale-105 transition-all duration-300">
            <h3 className="text-2xl md:text-3xl font-bold mb-4 text-center flex items-center justify-center gap-3">
              <MessageSquare className="animate-bounce" size={32} />
              Parle avec Sophie (IA) - Elle calcule TES pertes exactes
            </h3>
            <button
              onClick={() => {
                navigateToStage('ai-qualification');
                trackEvent('start_ai_chat_hero', 1);
              }}
              className="w-full bg-white text-green-600 py-4 rounded-lg font-bold text-xl hover:shadow-xl transition-all"
            >
              Commencer la conversation maintenant ‚Üí
            </button>
            <p className="text-center text-sm mt-3 flex items-center justify-center gap-2">
              <Sparkles size={16} />
              89% des gens qui testent l'IA deviennent clients en 24h
            </p>
          </div>

          {/* Quick Calculator */}
          <QuickCalculatorHero 
            userData={userData} 
            setUserData={setUserData}
            onComplete={() => setQuickCalcDone(true)}
            trackEvent={trackEvent}
          />
        </div>
      </section>

      {/* Stats Grid */}
      <section ref={statsRef} className="mb-12">
        <h2 className="text-3xl font-bold text-center mb-8">
          üìä Les Chiffres Qui Font Mal (Mais Qui Vont Te Motiver)
        </h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          {Object.entries(KILLER_STATS).slice(0, 8).map(([key, stat]: [string, any]) => (
            <div 
              key={key}
              className="bg-white rounded-xl shadow-lg p-6 text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-1"
            >
              <p className="text-3xl md:text-4xl font-black text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
                {stat.value}
              </p>
              <p className="text-sm text-gray-600 mt-2">{stat.desc}</p>
            </div>
          ))}
        </div>
        
        {/* Message percutant */}
        <div className="text-center mt-8 p-6 bg-red-50 rounded-xl">
          <p className="text-xl font-bold text-red-900">
            üí∏ Pendant que tu lis √ßa, tu viens de perdre{' '}
            <AnimatedMoney value={Math.round(userData.dailyLoss / 24 / 60)} />$ 
          </p>
          <p className="text-gray-700 mt-2">
            (Bas√© sur tes {userData.missedCalls} appels manqu√©s/semaine √† {userData.avgPrice}$/contrat)
          </p>
        </div>
      </section>

      {/* D√©mo IA */}
      <section className="mb-12">
        <DemoSection 
          showDemo={showDemo}
          setShowDemo={setShowDemo}
          trackEvent={trackEvent}
        />
      </section>

      {/* Plus de sections... */}
      <AuthorityProofSection trackEvent={trackEvent} />
      <TestimonialsWithResults />
      <BeforeAfterComparison userData={userData} />
      <TechStackAndGuarantees />
      <UrgencyFinalCTA 
        navigateToStage={navigateToStage}
        liveStats={liveStats}
        countdown={countdown}
        trackEvent={trackEvent}
      />
    </div>
  );
};

// AnimatedMoney Component
export const AnimatedMoney: React.FC<{ value: number }> = ({ value }) => {
  const [displayValue, setDisplayValue] = React.useState(0);
  
  React.useEffect(() => {
    const duration = 1000;
    const steps = 30;
    const increment = value / steps;
    let current = 0;
    
    const timer = setInterval(() => {
      current += increment;
      if (current >= value) {
        setDisplayValue(value);
        clearInterval(timer);
      } else {
        setDisplayValue(Math.round(current));
      }
    }, duration / steps);
    
    return () => clearInterval(timer);
  }, [value]);
  
  return <span>{displayValue.toLocaleString()}</span>;
};

// DemoSection Component avec le widget IA
export const DemoSection: React.FC<{ showDemo: boolean; setShowDemo: (show: boolean) => void; trackEvent: (event: string, value?: any) => void }> = ({ 
  showDemo, 
  setShowDemo, 
  trackEvent 
}) => {
  const [testMode, setTestMode] = React.useState<string | null>(null);

  return (
    <div className="bg-white rounded-2xl shadow-xl p-8">
      <h2 className="text-3xl font-bold mb-6 text-center">
        üé§ Teste l'IA LIVE - Pose N'importe Quelle Question!
      </h2>
      
      <div className="text-center mb-8">
        <p className="text-lg text-gray-600 mb-4">
          L'IA comprend le qu√©b√©cois, r√©pond en 2 secondes, g√®re toutes les situations
        </p>
        
        {/* Quick test buttons */}
        <div className="flex flex-wrap justify-center gap-3 mb-6">
          {[
            { label: "Client difficile", color: "bg-red-100 text-red-700 hover:bg-red-200" },
            { label: "Question technique", color: "bg-blue-100 text-blue-700 hover:bg-blue-200" },
            { label: "Urgence", color: "bg-orange-100 text-orange-700 hover:bg-orange-200" },
            { label: "Budget serr√©", color: "bg-purple-100 text-purple-700 hover:bg-purple-200" }
          ].map((test, i) => (
            <button
              key={i}
              onClick={() => {
                setTestMode(test.label);
                trackEvent('demo_test_selected', test.label);
              }}
              className={`px-4 py-2 rounded-lg font-semibold transition-colors ${test.color}`}
            >
              {test.label}
            </button>
          ))}
        </div>
      </div>

      {!showDemo ? (
        <div className="max-w-2xl mx-auto">
          <button
            onClick={() => {
              setShowDemo(true);
              trackEvent('demo_activated');
            }}
            className="w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white py-6 rounded-xl font-bold text-xl hover:scale-105 transition-transform flex items-center justify-center gap-3 shadow-lg"
          >
            <Headphones className="animate-pulse" size={32} />
            Activer la d√©mo vocale maintenant
          </button>
          
          <p className="text-center text-sm text-gray-600 mt-4">
            ‚ö° Aucune installation requise ‚Ä¢ Fonctionne sur tous les appareils
          </p>
        </div>
      ) : (
        <div className="max-w-3xl mx-auto">
          {/* Widget de d√©mo vocale */}
          <div className="bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl p-6 shadow-inner">
            <div className="bg-white rounded-lg p-8">
              {/* @ts-ignore */}
              <elevenlabs-convai agent-id="agent_01jw7kxhkjef2tvn7a6jwpt4e9"></elevenlabs-convai>
              <Script src="https://elevenlabs.io/convai-widget/index.js" />
            </div>
          </div>
          
          {/* Performance metrics */}
          <div className="grid grid-cols-3 gap-4 mt-6">
            <div className="text-center">
              <p className="text-2xl font-bold text-green-600">2.1s</p>
              <p className="text-sm text-gray-600">Temps de r√©ponse</p>
            </div>
            <div className="text-center">
              <p className="text-2xl font-bold text-blue-600">98%</p>
              <p className="text-sm text-gray-600">Compr√©hension</p>
            </div>
            <div className="text-center">
              <p className="text-2xl font-bold text-purple-600">24/7</p>
              <p className="text-sm text-gray-600">Disponible</p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

// Note: Pour √©conomiser de l'espace, je mets juste la structure
// Tu devras copier tous les autres composants du code original ici:
// - QuickCalculatorHero
// - AuthorityProofSection  
// - TestimonialsWithResults
// - BeforeAfterComparison
// - TechStackAndGuarantees
// - UrgencyFinalCTA
// - AIQualificationStage
// - DeepCalculatorStage
// - ProofDemoStage
// - OfferContractStage
// - PaymentStage
// - BookingStage
// - WelcomeVIPStage
// - Tous les autres composants de support

// Imports des constantes
const CONFIG = {
  SPOTS_TAKEN: 3,
};

const KILLER_STATS = {
  harvard: { value: "21X", desc: "plus de chances apr√®s 1 minute" },
  missedCalls: { value: "62%", desc: "des appels non r√©pondus" },
  neverCallback: { value: "85%", desc: "ne rappellent JAMAIS" },
  lossPerCall: { value: "1,200$", desc: "perdu PAR appel (services)" },
  weekendMissed: { value: "40%+", desc: "d'appels manqu√©s la fin de semaine" },
  phoneConversion: { value: "10-15X", desc: "meilleur que les leads web" },
  industryMissed: { value: "27%", desc: "d'appels manqu√©s (taillage)" },
  preferPhone: { value: "65%", desc: "pr√©f√®rent appeler" },
};